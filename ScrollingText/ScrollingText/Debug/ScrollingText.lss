
ScrollingText.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000024a  00800100  0000067c  00000710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000067c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002c2  0080034a  0080034a  0000095a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000095a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000098c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013ea  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bda  00000000  00000000  00001eb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001111  00000000  00000000  00002a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000032c  00000000  00000000  00003ba0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008065  00000000  00000000  00003ecc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008d9  00000000  00000000  0000bf31  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  0000c80a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002f03  00000000  00000000  0000c9ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	d6 c2       	rjmp	.+1452   	; 0x5b2 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c2       	rjmp	.+1292   	; 0x522 <__vector_5>
  16:	00 00       	nop
  18:	be c2       	rjmp	.+1404   	; 0x596 <__vector_6>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	e7 c2       	rjmp	.+1486   	; 0x5f0 <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e7       	ldi	r30, 0x7C	; 124
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 34       	cpi	r26, 0x4A	; 74
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	26 e0       	ldi	r18, 0x06	; 6
  b4:	aa e4       	ldi	r26, 0x4A	; 74
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a9 d2       	rcall	.+1362   	; 0x616 <main>
  c4:	d9 c2       	rjmp	.+1458   	; 0x678 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <startDotmatrix>:
		writeToDotmatrix(i * 2);
		writeToDotmatrix(letr.structure[i]);
	}
	
	stopDotmatrix();
}
  c8:	84 ea       	ldi	r24, 0xA4	; 164
  ca:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  ce:	e4 e7       	ldi	r30, 0x74	; 116
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	88 23       	and	r24, r24
  d6:	ec f7       	brge	.-6      	; 0xd2 <startDotmatrix+0xa>
  d8:	08 95       	ret

000000da <writeToDotmatrix>:
  da:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
  de:	84 e8       	ldi	r24, 0x84	; 132
  e0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  e4:	e4 e7       	ldi	r30, 0x74	; 116
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	88 23       	and	r24, r24
  ec:	ec f7       	brge	.-6      	; 0xe8 <writeToDotmatrix+0xe>
  ee:	08 95       	ret

000000f0 <dotmatrixInit>:
  f0:	af 92       	push	r10
  f2:	bf 92       	push	r11
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	ff 92       	push	r15
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	00 d0       	rcall	.+0      	; 0x106 <dotmatrixInit+0x16>
 106:	00 d0       	rcall	.+0      	; 0x108 <dotmatrixInit+0x18>
 108:	00 d0       	rcall	.+0      	; 0x10a <dotmatrixInit+0x1a>
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 112:	80 e2       	ldi	r24, 0x20	; 32
 114:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 118:	86 e0       	ldi	r24, 0x06	; 6
 11a:	ec e3       	ldi	r30, 0x3C	; 60
 11c:	f3 e0       	ldi	r31, 0x03	; 3
 11e:	de 01       	movw	r26, r28
 120:	11 96       	adiw	r26, 0x01	; 1
 122:	01 90       	ld	r0, Z+
 124:	0d 92       	st	X+, r0
 126:	8a 95       	dec	r24
 128:	e1 f7       	brne	.-8      	; 0x122 <dotmatrixInit+0x32>
 12a:	ce 01       	movw	r24, r28
 12c:	01 96       	adiw	r24, 0x01	; 1
 12e:	7c 01       	movw	r14, r24
 130:	5e 01       	movw	r10, r28
 132:	97 e0       	ldi	r25, 0x07	; 7
 134:	a9 0e       	add	r10, r25
 136:	b1 1c       	adc	r11, r1
 138:	0f 2e       	mov	r0, r31
 13a:	f4 e7       	ldi	r31, 0x74	; 116
 13c:	cf 2e       	mov	r12, r31
 13e:	d1 2c       	mov	r13, r1
 140:	f0 2d       	mov	r31, r0
 142:	04 e9       	ldi	r16, 0x94	; 148
 144:	c1 df       	rcall	.-126    	; 0xc8 <startDotmatrix>
 146:	f7 01       	movw	r30, r14
 148:	10 81       	ld	r17, Z
 14a:	f2 e0       	ldi	r31, 0x02	; 2
 14c:	ef 0e       	add	r14, r31
 14e:	f1 1c       	adc	r15, r1
 150:	10 52       	subi	r17, 0x20	; 32
 152:	81 2f       	mov	r24, r17
 154:	c2 df       	rcall	.-124    	; 0xda <writeToDotmatrix>
 156:	81 e2       	ldi	r24, 0x21	; 33
 158:	c0 df       	rcall	.-128    	; 0xda <writeToDotmatrix>
 15a:	f6 01       	movw	r30, r12
 15c:	00 83       	st	Z, r16
 15e:	b4 df       	rcall	.-152    	; 0xc8 <startDotmatrix>
 160:	81 2f       	mov	r24, r17
 162:	bb df       	rcall	.-138    	; 0xda <writeToDotmatrix>
 164:	80 ea       	ldi	r24, 0xA0	; 160
 166:	b9 df       	rcall	.-142    	; 0xda <writeToDotmatrix>
 168:	f6 01       	movw	r30, r12
 16a:	00 83       	st	Z, r16
 16c:	ad df       	rcall	.-166    	; 0xc8 <startDotmatrix>
 16e:	81 2f       	mov	r24, r17
 170:	b4 df       	rcall	.-152    	; 0xda <writeToDotmatrix>
 172:	87 ee       	ldi	r24, 0xE7	; 231
 174:	b2 df       	rcall	.-156    	; 0xda <writeToDotmatrix>
 176:	f6 01       	movw	r30, r12
 178:	00 83       	st	Z, r16
 17a:	a6 df       	rcall	.-180    	; 0xc8 <startDotmatrix>
 17c:	81 2f       	mov	r24, r17
 17e:	ad df       	rcall	.-166    	; 0xda <writeToDotmatrix>
 180:	81 e8       	ldi	r24, 0x81	; 129
 182:	ab df       	rcall	.-170    	; 0xda <writeToDotmatrix>
 184:	f6 01       	movw	r30, r12
 186:	00 83       	st	Z, r16
 188:	ea 14       	cp	r14, r10
 18a:	fb 04       	cpc	r15, r11
 18c:	d9 f6       	brne	.-74     	; 0x144 <dotmatrixInit+0x54>
 18e:	26 96       	adiw	r28, 0x06	; 6
 190:	0f b6       	in	r0, 0x3f	; 63
 192:	f8 94       	cli
 194:	de bf       	out	0x3e, r29	; 62
 196:	0f be       	out	0x3f, r0	; 63
 198:	cd bf       	out	0x3d, r28	; 61
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	1f 91       	pop	r17
 1a0:	0f 91       	pop	r16
 1a2:	ff 90       	pop	r15
 1a4:	ef 90       	pop	r14
 1a6:	df 90       	pop	r13
 1a8:	cf 90       	pop	r12
 1aa:	bf 90       	pop	r11
 1ac:	af 90       	pop	r10
 1ae:	08 95       	ret

000001b0 <clearDisplay>:
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	c0 e0       	ldi	r28, 0x00	; 0
 1ba:	04 e7       	ldi	r16, 0x74	; 116
 1bc:	10 e0       	ldi	r17, 0x00	; 0
 1be:	d4 e9       	ldi	r29, 0x94	; 148
 1c0:	83 df       	rcall	.-250    	; 0xc8 <startDotmatrix>
 1c2:	80 ee       	ldi	r24, 0xE0	; 224
 1c4:	8a df       	rcall	.-236    	; 0xda <writeToDotmatrix>
 1c6:	8c 2f       	mov	r24, r28
 1c8:	88 df       	rcall	.-240    	; 0xda <writeToDotmatrix>
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	86 df       	rcall	.-244    	; 0xda <writeToDotmatrix>
 1ce:	f8 01       	movw	r30, r16
 1d0:	d0 83       	st	Z, r29
 1d2:	ce 5f       	subi	r28, 0xFE	; 254
 1d4:	c0 31       	cpi	r28, 0x10	; 16
 1d6:	a1 f7       	brne	.-24     	; 0x1c0 <clearDisplay+0x10>
 1d8:	c0 e0       	ldi	r28, 0x00	; 0
 1da:	04 e7       	ldi	r16, 0x74	; 116
 1dc:	10 e0       	ldi	r17, 0x00	; 0
 1de:	d4 e9       	ldi	r29, 0x94	; 148
 1e0:	73 df       	rcall	.-282    	; 0xc8 <startDotmatrix>
 1e2:	82 ee       	ldi	r24, 0xE2	; 226
 1e4:	7a df       	rcall	.-268    	; 0xda <writeToDotmatrix>
 1e6:	8c 2f       	mov	r24, r28
 1e8:	78 df       	rcall	.-272    	; 0xda <writeToDotmatrix>
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	76 df       	rcall	.-276    	; 0xda <writeToDotmatrix>
 1ee:	f8 01       	movw	r30, r16
 1f0:	d0 83       	st	Z, r29
 1f2:	ce 5f       	subi	r28, 0xFE	; 254
 1f4:	c0 31       	cpi	r28, 0x10	; 16
 1f6:	a1 f7       	brne	.-24     	; 0x1e0 <clearDisplay+0x30>
 1f8:	c0 e0       	ldi	r28, 0x00	; 0
 1fa:	04 e7       	ldi	r16, 0x74	; 116
 1fc:	10 e0       	ldi	r17, 0x00	; 0
 1fe:	d4 e9       	ldi	r29, 0x94	; 148
 200:	63 df       	rcall	.-314    	; 0xc8 <startDotmatrix>
 202:	88 ee       	ldi	r24, 0xE8	; 232
 204:	6a df       	rcall	.-300    	; 0xda <writeToDotmatrix>
 206:	8c 2f       	mov	r24, r28
 208:	68 df       	rcall	.-304    	; 0xda <writeToDotmatrix>
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	66 df       	rcall	.-308    	; 0xda <writeToDotmatrix>
 20e:	f8 01       	movw	r30, r16
 210:	d0 83       	st	Z, r29
 212:	ce 5f       	subi	r28, 0xFE	; 254
 214:	c0 31       	cpi	r28, 0x10	; 16
 216:	a1 f7       	brne	.-24     	; 0x200 <clearDisplay+0x50>
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	1f 91       	pop	r17
 21e:	0f 91       	pop	r16
 220:	08 95       	ret

00000222 <selectLetters>:
 222:	cf 92       	push	r12
 224:	df 92       	push	r13
 226:	ef 92       	push	r14
 228:	ff 92       	push	r15
 22a:	0f 93       	push	r16
 22c:	1f 93       	push	r17
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	cd b7       	in	r28, 0x3d	; 61
 234:	de b7       	in	r29, 0x3e	; 62
 236:	63 97       	sbiw	r28, 0x13	; 19
 238:	0f b6       	in	r0, 0x3f	; 63
 23a:	f8 94       	cli
 23c:	de bf       	out	0x3e, r29	; 62
 23e:	0f be       	out	0x3f, r0	; 63
 240:	cd bf       	out	0x3d, r28	; 61
 242:	7c 01       	movw	r14, r24
 244:	6c 01       	movw	r12, r24
 246:	00 e0       	ldi	r16, 0x00	; 0
 248:	10 e0       	ldi	r17, 0x00	; 0
 24a:	69 c0       	rjmp	.+210    	; 0x31e <selectLetters+0xfc>
 24c:	f6 01       	movw	r30, r12
 24e:	61 91       	ld	r22, Z+
 250:	6f 01       	movw	r12, r30
 252:	ce 01       	movw	r24, r28
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	11 d1       	rcall	.+546    	; 0x47a <getLetter>
 258:	89 81       	ldd	r24, Y+1	; 0x01
 25a:	80 32       	cpi	r24, 0x20	; 32
 25c:	c9 f1       	breq	.+114    	; 0x2d0 <selectLetters+0xae>
 25e:	4a 81       	ldd	r20, Y+2	; 0x02
 260:	5b 81       	ldd	r21, Y+3	; 0x03
 262:	14 16       	cp	r1, r20
 264:	15 06       	cpc	r1, r21
 266:	1c f5       	brge	.+70     	; 0x2ae <selectLetters+0x8c>
 268:	fe 01       	movw	r30, r28
 26a:	34 96       	adiw	r30, 0x04	; 4
 26c:	60 91 4a 03 	lds	r22, 0x034A	; 0x80034a <__data_end>
 270:	70 91 4b 03 	lds	r23, 0x034B	; 0x80034b <__data_end+0x1>
 274:	db 01       	movw	r26, r22
 276:	aa 0f       	add	r26, r26
 278:	bb 1f       	adc	r27, r27
 27a:	a0 5b       	subi	r26, 0xB0	; 176
 27c:	bc 4f       	sbci	r27, 0xFC	; 252
 27e:	9a 01       	movw	r18, r20
 280:	22 0f       	add	r18, r18
 282:	33 1f       	adc	r19, r19
 284:	2d 5f       	subi	r18, 0xFD	; 253
 286:	3f 4f       	sbci	r19, 0xFF	; 255
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	8c 0f       	add	r24, r28
 28e:	9d 1f       	adc	r25, r29
 290:	28 0f       	add	r18, r24
 292:	39 1f       	adc	r19, r25
 294:	81 91       	ld	r24, Z+
 296:	91 91       	ld	r25, Z+
 298:	8d 93       	st	X+, r24
 29a:	9d 93       	st	X+, r25
 29c:	e2 17       	cp	r30, r18
 29e:	f3 07       	cpc	r31, r19
 2a0:	c9 f7       	brne	.-14     	; 0x294 <selectLetters+0x72>
 2a2:	46 0f       	add	r20, r22
 2a4:	57 1f       	adc	r21, r23
 2a6:	50 93 4b 03 	sts	0x034B, r21	; 0x80034b <__data_end+0x1>
 2aa:	40 93 4a 03 	sts	0x034A, r20	; 0x80034a <__data_end>
 2ae:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <__data_end>
 2b2:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <__data_end+0x1>
 2b6:	fc 01       	movw	r30, r24
 2b8:	ee 0f       	add	r30, r30
 2ba:	ff 1f       	adc	r31, r31
 2bc:	e0 5b       	subi	r30, 0xB0	; 176
 2be:	fc 4f       	sbci	r31, 0xFC	; 252
 2c0:	11 82       	std	Z+1, r1	; 0x01
 2c2:	10 82       	st	Z, r1
 2c4:	01 96       	adiw	r24, 0x01	; 1
 2c6:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <__data_end+0x1>
 2ca:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <__data_end>
 2ce:	25 c0       	rjmp	.+74     	; 0x31a <selectLetters+0xf8>
 2d0:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <__data_end>
 2d4:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <__data_end+0x1>
 2d8:	fc 01       	movw	r30, r24
 2da:	ee 0f       	add	r30, r30
 2dc:	ff 1f       	adc	r31, r31
 2de:	e0 5b       	subi	r30, 0xB0	; 176
 2e0:	fc 4f       	sbci	r31, 0xFC	; 252
 2e2:	11 82       	std	Z+1, r1	; 0x01
 2e4:	10 82       	st	Z, r1
 2e6:	fc 01       	movw	r30, r24
 2e8:	ee 0f       	add	r30, r30
 2ea:	ff 1f       	adc	r31, r31
 2ec:	ee 5a       	subi	r30, 0xAE	; 174
 2ee:	fc 4f       	sbci	r31, 0xFC	; 252
 2f0:	11 82       	std	Z+1, r1	; 0x01
 2f2:	10 82       	st	Z, r1
 2f4:	fc 01       	movw	r30, r24
 2f6:	ee 0f       	add	r30, r30
 2f8:	ff 1f       	adc	r31, r31
 2fa:	ec 5a       	subi	r30, 0xAC	; 172
 2fc:	fc 4f       	sbci	r31, 0xFC	; 252
 2fe:	11 82       	std	Z+1, r1	; 0x01
 300:	10 82       	st	Z, r1
 302:	fc 01       	movw	r30, r24
 304:	ee 0f       	add	r30, r30
 306:	ff 1f       	adc	r31, r31
 308:	ea 5a       	subi	r30, 0xAA	; 170
 30a:	fc 4f       	sbci	r31, 0xFC	; 252
 30c:	11 82       	std	Z+1, r1	; 0x01
 30e:	10 82       	st	Z, r1
 310:	04 96       	adiw	r24, 0x04	; 4
 312:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <__data_end+0x1>
 316:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <__data_end>
 31a:	0f 5f       	subi	r16, 0xFF	; 255
 31c:	1f 4f       	sbci	r17, 0xFF	; 255
 31e:	f7 01       	movw	r30, r14
 320:	01 90       	ld	r0, Z+
 322:	00 20       	and	r0, r0
 324:	e9 f7       	brne	.-6      	; 0x320 <selectLetters+0xfe>
 326:	31 97       	sbiw	r30, 0x01	; 1
 328:	ee 19       	sub	r30, r14
 32a:	ff 09       	sbc	r31, r15
 32c:	0e 17       	cp	r16, r30
 32e:	1f 07       	cpc	r17, r31
 330:	08 f4       	brcc	.+2      	; 0x334 <selectLetters+0x112>
 332:	8c cf       	rjmp	.-232    	; 0x24c <selectLetters+0x2a>
 334:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <__data_end>
 338:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <__data_end+0x1>
 33c:	47 96       	adiw	r24, 0x17	; 23
 33e:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <updateCount+0x1>
 342:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <updateCount>
 346:	63 96       	adiw	r28, 0x13	; 19
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	f8 94       	cli
 34c:	de bf       	out	0x3e, r29	; 62
 34e:	0f be       	out	0x3f, r0	; 63
 350:	cd bf       	out	0x3d, r28	; 61
 352:	df 91       	pop	r29
 354:	cf 91       	pop	r28
 356:	1f 91       	pop	r17
 358:	0f 91       	pop	r16
 35a:	ff 90       	pop	r15
 35c:	ef 90       	pop	r14
 35e:	df 90       	pop	r13
 360:	cf 90       	pop	r12
 362:	08 95       	ret

00000364 <scrollLeft>:
 364:	8f 92       	push	r8
 366:	9f 92       	push	r9
 368:	af 92       	push	r10
 36a:	bf 92       	push	r11
 36c:	cf 92       	push	r12
 36e:	df 92       	push	r13
 370:	ef 92       	push	r14
 372:	ff 92       	push	r15
 374:	0f 93       	push	r16
 376:	1f 93       	push	r17
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	00 e0       	ldi	r16, 0x00	; 0
 37e:	10 e0       	ldi	r17, 0x00	; 0
 380:	e1 2c       	mov	r14, r1
 382:	f1 2c       	mov	r15, r1
 384:	0f 2e       	mov	r0, r31
 386:	fb e2       	ldi	r31, 0x2B	; 43
 388:	9f 2e       	mov	r9, r31
 38a:	f0 2d       	mov	r31, r0
 38c:	aa 24       	eor	r10, r10
 38e:	a3 94       	inc	r10
 390:	0f 2e       	mov	r0, r31
 392:	f4 e7       	ldi	r31, 0x74	; 116
 394:	cf 2e       	mov	r12, r31
 396:	d1 2c       	mov	r13, r1
 398:	f0 2d       	mov	r31, r0
 39a:	0f 2e       	mov	r0, r31
 39c:	f4 e9       	ldi	r31, 0x94	; 148
 39e:	8f 2e       	mov	r8, r31
 3a0:	f0 2d       	mov	r31, r0
 3a2:	92 de       	rcall	.-732    	; 0xc8 <startDotmatrix>
 3a4:	01 30       	cpi	r16, 0x01	; 1
 3a6:	11 05       	cpc	r17, r1
 3a8:	49 f0       	breq	.+18     	; 0x3bc <scrollLeft+0x58>
 3aa:	02 30       	cpi	r16, 0x02	; 2
 3ac:	11 05       	cpc	r17, r1
 3ae:	49 f0       	breq	.+18     	; 0x3c2 <scrollLeft+0x5e>
 3b0:	01 15       	cp	r16, r1
 3b2:	11 05       	cpc	r17, r1
 3b4:	41 f4       	brne	.+16     	; 0x3c6 <scrollLeft+0x62>
 3b6:	80 ee       	ldi	r24, 0xE0	; 224
 3b8:	90 de       	rcall	.-736    	; 0xda <writeToDotmatrix>
 3ba:	05 c0       	rjmp	.+10     	; 0x3c6 <scrollLeft+0x62>
 3bc:	82 ee       	ldi	r24, 0xE2	; 226
 3be:	8d de       	rcall	.-742    	; 0xda <writeToDotmatrix>
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <scrollLeft+0x62>
 3c2:	88 ee       	ldi	r24, 0xE8	; 232
 3c4:	8a de       	rcall	.-748    	; 0xda <writeToDotmatrix>
 3c6:	e7 01       	movw	r28, r14
 3c8:	b1 2c       	mov	r11, r1
 3ca:	8b 2d       	mov	r24, r11
 3cc:	86 de       	rcall	.-756    	; 0xda <writeToDotmatrix>
 3ce:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <updateCount>
 3d2:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <updateCount+0x1>
 3d6:	9e 01       	movw	r18, r28
 3d8:	28 1b       	sub	r18, r24
 3da:	39 0b       	sbc	r19, r25
 3dc:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <__data_end>
 3e0:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <__data_end+0x1>
 3e4:	82 0f       	add	r24, r18
 3e6:	93 1f       	adc	r25, r19
 3e8:	01 96       	adiw	r24, 0x01	; 1
 3ea:	12 f4       	brpl	.+4      	; 0x3f0 <scrollLeft+0x8c>
 3ec:	89 2d       	mov	r24, r9
 3ee:	9a 2d       	mov	r25, r10
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	fc 01       	movw	r30, r24
 3f6:	e0 5b       	subi	r30, 0xB0	; 176
 3f8:	fc 4f       	sbci	r31, 0xFC	; 252
 3fa:	80 81       	ld	r24, Z
 3fc:	6e de       	rcall	.-804    	; 0xda <writeToDotmatrix>
 3fe:	21 96       	adiw	r28, 0x01	; 1
 400:	b3 94       	inc	r11
 402:	b3 94       	inc	r11
 404:	80 e1       	ldi	r24, 0x10	; 16
 406:	b8 12       	cpse	r11, r24
 408:	e0 cf       	rjmp	.-64     	; 0x3ca <scrollLeft+0x66>
 40a:	e8 e0       	ldi	r30, 0x08	; 8
 40c:	ee 0e       	add	r14, r30
 40e:	f1 1c       	adc	r15, r1
 410:	f6 01       	movw	r30, r12
 412:	80 82       	st	Z, r8
 414:	0f 5f       	subi	r16, 0xFF	; 255
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	f8 e1       	ldi	r31, 0x18	; 24
 41a:	ef 16       	cp	r14, r31
 41c:	f1 04       	cpc	r15, r1
 41e:	09 f0       	breq	.+2      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 420:	c0 cf       	rjmp	.-128    	; 0x3a2 <scrollLeft+0x3e>
 422:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <updateCount>
 426:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <updateCount+0x1>
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <updateCount+0x1>
 430:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <updateCount>
 434:	18 16       	cp	r1, r24
 436:	19 06       	cpc	r1, r25
 438:	4c f0       	brlt	.+18     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 43a:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <__data_end>
 43e:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <__data_end+0x1>
 442:	47 96       	adiw	r24, 0x17	; 23
 444:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <updateCount+0x1>
 448:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <updateCount>
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	1f 91       	pop	r17
 452:	0f 91       	pop	r16
 454:	ff 90       	pop	r15
 456:	ef 90       	pop	r14
 458:	df 90       	pop	r13
 45a:	cf 90       	pop	r12
 45c:	bf 90       	pop	r11
 45e:	af 90       	pop	r10
 460:	9f 90       	pop	r9
 462:	8f 90       	pop	r8
 464:	08 95       	ret

00000466 <setScrollingSpeed>:

void setScrollingSpeed(int s)
{
	scrollingSpeed = s;
 466:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 46a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 46e:	08 95       	ret

00000470 <getScrollingSpeed>:
}

int getScrollingSpeed(void)
{
	return scrollingSpeed;
 470:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 474:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 478:	08 95       	ret

0000047a <getLetter>:
 47a:	ac 01       	movw	r20, r24
 47c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <letters>
 480:	68 17       	cp	r22, r24
 482:	61 f0       	breq	.+24     	; 0x49c <getLetter+0x22>
 484:	6c 33       	cpi	r22, 0x3C	; 60
 486:	d1 f0       	breq	.+52     	; 0x4bc <getLetter+0x42>
 488:	6e 33       	cpi	r22, 0x3E	; 62
 48a:	09 f1       	breq	.+66     	; 0x4ce <getLetter+0x54>
 48c:	e5 e1       	ldi	r30, 0x15	; 21
 48e:	f1 e0       	ldi	r31, 0x01	; 1
 490:	21 e0       	ldi	r18, 0x01	; 1
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	90 81       	ld	r25, Z
 496:	96 13       	cpse	r25, r22
 498:	23 c0       	rjmp	.+70     	; 0x4e0 <getLetter+0x66>
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <getLetter+0x26>
 49c:	20 e0       	ldi	r18, 0x00	; 0
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	83 e1       	ldi	r24, 0x13	; 19
 4a2:	82 9f       	mul	r24, r18
 4a4:	f0 01       	movw	r30, r0
 4a6:	83 9f       	mul	r24, r19
 4a8:	f0 0d       	add	r31, r0
 4aa:	11 24       	eor	r1, r1
 4ac:	ee 5f       	subi	r30, 0xFE	; 254
 4ae:	fe 4f       	sbci	r31, 0xFE	; 254
 4b0:	da 01       	movw	r26, r20
 4b2:	01 90       	ld	r0, Z+
 4b4:	0d 92       	st	X+, r0
 4b6:	8a 95       	dec	r24
 4b8:	e1 f7       	brne	.-8      	; 0x4b2 <getLetter+0x38>
 4ba:	20 c0       	rjmp	.+64     	; 0x4fc <getLetter+0x82>
 4bc:	83 e1       	ldi	r24, 0x13	; 19
 4be:	e6 e1       	ldi	r30, 0x16	; 22
 4c0:	f3 e0       	ldi	r31, 0x03	; 3
 4c2:	da 01       	movw	r26, r20
 4c4:	01 90       	ld	r0, Z+
 4c6:	0d 92       	st	X+, r0
 4c8:	8a 95       	dec	r24
 4ca:	e1 f7       	brne	.-8      	; 0x4c4 <getLetter+0x4a>
 4cc:	17 c0       	rjmp	.+46     	; 0x4fc <getLetter+0x82>
 4ce:	83 e1       	ldi	r24, 0x13	; 19
 4d0:	e9 e2       	ldi	r30, 0x29	; 41
 4d2:	f3 e0       	ldi	r31, 0x03	; 3
 4d4:	da 01       	movw	r26, r20
 4d6:	01 90       	ld	r0, Z+
 4d8:	0d 92       	st	X+, r0
 4da:	8a 95       	dec	r24
 4dc:	e1 f7       	brne	.-8      	; 0x4d6 <getLetter+0x5c>
 4de:	0e c0       	rjmp	.+28     	; 0x4fc <getLetter+0x82>
 4e0:	2f 5f       	subi	r18, 0xFF	; 255
 4e2:	3f 4f       	sbci	r19, 0xFF	; 255
 4e4:	73 96       	adiw	r30, 0x13	; 19
 4e6:	2d 31       	cpi	r18, 0x1D	; 29
 4e8:	31 05       	cpc	r19, r1
 4ea:	a1 f6       	brne	.-88     	; 0x494 <getLetter+0x1a>
 4ec:	83 e1       	ldi	r24, 0x13	; 19
 4ee:	e2 e0       	ldi	r30, 0x02	; 2
 4f0:	f1 e0       	ldi	r31, 0x01	; 1
 4f2:	da 01       	movw	r26, r20
 4f4:	01 90       	ld	r0, Z+
 4f6:	0d 92       	st	X+, r0
 4f8:	8a 95       	dec	r24
 4fa:	e1 f7       	brne	.-8      	; 0x4f4 <getLetter+0x7a>
 4fc:	ca 01       	movw	r24, r20
 4fe:	08 95       	ret

00000500 <wait>:
#include <avr/io.h>
#include <util/delay.h>

void wait(int ms)
{
	for (int i = 0; i < ms; i++)
 500:	18 16       	cp	r1, r24
 502:	19 06       	cpc	r1, r25
 504:	6c f4       	brge	.+26     	; 0x520 <wait+0x20>
 506:	20 e0       	ldi	r18, 0x00	; 0
 508:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 50a:	ef ec       	ldi	r30, 0xCF	; 207
 50c:	f7 e0       	ldi	r31, 0x07	; 7
 50e:	31 97       	sbiw	r30, 0x01	; 1
 510:	f1 f7       	brne	.-4      	; 0x50e <wait+0xe>
 512:	00 c0       	rjmp	.+0      	; 0x514 <wait+0x14>
 514:	00 00       	nop
 516:	2f 5f       	subi	r18, 0xFF	; 255
 518:	3f 4f       	sbci	r19, 0xFF	; 255
 51a:	82 17       	cp	r24, r18
 51c:	93 07       	cpc	r25, r19
 51e:	a9 f7       	brne	.-22     	; 0x50a <wait+0xa>
 520:	08 95       	ret

00000522 <__vector_5>:
int scrollDirection = 0;

void adcInit();

ISR( INT4_vect )
{
 522:	1f 92       	push	r1
 524:	0f 92       	push	r0
 526:	0f b6       	in	r0, 0x3f	; 63
 528:	0f 92       	push	r0
 52a:	11 24       	eor	r1, r1
 52c:	0b b6       	in	r0, 0x3b	; 59
 52e:	0f 92       	push	r0
 530:	2f 93       	push	r18
 532:	3f 93       	push	r19
 534:	4f 93       	push	r20
 536:	5f 93       	push	r21
 538:	6f 93       	push	r22
 53a:	7f 93       	push	r23
 53c:	8f 93       	push	r24
 53e:	9f 93       	push	r25
 540:	af 93       	push	r26
 542:	bf 93       	push	r27
 544:	ef 93       	push	r30
 546:	ff 93       	push	r31
	switch(getScrollingSpeed())
 548:	93 df       	rcall	.-218    	; 0x470 <getScrollingSpeed>
 54a:	84 30       	cpi	r24, 0x04	; 4
 54c:	91 05       	cpc	r25, r1
 54e:	49 f0       	breq	.+18     	; 0x562 <__vector_5+0x40>
 550:	88 30       	cpi	r24, 0x08	; 8
 552:	91 05       	cpc	r25, r1
 554:	51 f0       	breq	.+20     	; 0x56a <__vector_5+0x48>
 556:	01 97       	sbiw	r24, 0x01	; 1
 558:	59 f4       	brne	.+22     	; 0x570 <__vector_5+0x4e>
	{
		case SCROLLING_FAST:
			setScrollingSpeed(SCROLLING_AVERAGE);
 55a:	84 e0       	ldi	r24, 0x04	; 4
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	83 df       	rcall	.-250    	; 0x466 <setScrollingSpeed>
			break;
 560:	07 c0       	rjmp	.+14     	; 0x570 <__vector_5+0x4e>
		case SCROLLING_AVERAGE:
			setScrollingSpeed(SCROLLING_SLOW);
 562:	88 e0       	ldi	r24, 0x08	; 8
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	7f df       	rcall	.-258    	; 0x466 <setScrollingSpeed>
			break;
		case SCROLLING_SLOW:
			setScrollingSpeed(SCROLLING_FAST);
 568:	03 c0       	rjmp	.+6      	; 0x570 <__vector_5+0x4e>
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	7b df       	rcall	.-266    	; 0x466 <setScrollingSpeed>
			break;
	}
}
 570:	ff 91       	pop	r31
 572:	ef 91       	pop	r30
 574:	bf 91       	pop	r27
 576:	af 91       	pop	r26
 578:	9f 91       	pop	r25
 57a:	8f 91       	pop	r24
 57c:	7f 91       	pop	r23
 57e:	6f 91       	pop	r22
 580:	5f 91       	pop	r21
 582:	4f 91       	pop	r20
 584:	3f 91       	pop	r19
 586:	2f 91       	pop	r18
 588:	0f 90       	pop	r0
 58a:	0b be       	out	0x3b, r0	; 59
 58c:	0f 90       	pop	r0
 58e:	0f be       	out	0x3f, r0	; 63
 590:	0f 90       	pop	r0
 592:	1f 90       	pop	r1
 594:	18 95       	reti

00000596 <__vector_6>:

ISR( INT5_vect )
{
 596:	1f 92       	push	r1
 598:	0f 92       	push	r0
 59a:	0f b6       	in	r0, 0x3f	; 63
 59c:	0f 92       	push	r0
 59e:	11 24       	eor	r1, r1
 5a0:	8f 93       	push	r24
	PORTB = 0b00000010;
 5a2:	82 e0       	ldi	r24, 0x02	; 2
 5a4:	88 bb       	out	0x18, r24	; 24
}
 5a6:	8f 91       	pop	r24
 5a8:	0f 90       	pop	r0
 5aa:	0f be       	out	0x3f, r0	; 63
 5ac:	0f 90       	pop	r0
 5ae:	1f 90       	pop	r1
 5b0:	18 95       	reti

000005b2 <__vector_1>:

ISR( INT0_vect )
{
 5b2:	1f 92       	push	r1
 5b4:	0f 92       	push	r0
 5b6:	0f b6       	in	r0, 0x3f	; 63
 5b8:	0f 92       	push	r0
 5ba:	11 24       	eor	r1, r1
 5bc:	8f 93       	push	r24
 5be:	9f 93       	push	r25
	if(scrollDirection == 0)
 5c0:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <scrollDirection>
 5c4:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <scrollDirection+0x1>
 5c8:	89 2b       	or	r24, r25
 5ca:	39 f4       	brne	.+14     	; 0x5da <__vector_1+0x28>
	{
		scrollDirection = 1;
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	90 93 4f 03 	sts	0x034F, r25	; 0x80034f <scrollDirection+0x1>
 5d4:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <scrollDirection>
 5d8:	04 c0       	rjmp	.+8      	; 0x5e2 <__vector_1+0x30>
	}
	else
	{
		scrollDirection = 0;
 5da:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <scrollDirection+0x1>
 5de:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <scrollDirection>
	}
}
 5e2:	9f 91       	pop	r25
 5e4:	8f 91       	pop	r24
 5e6:	0f 90       	pop	r0
 5e8:	0f be       	out	0x3f, r0	; 63
 5ea:	0f 90       	pop	r0
 5ec:	1f 90       	pop	r1
 5ee:	18 95       	reti

000005f0 <__vector_8>:

ISR( INT7_vect )
{
 5f0:	1f 92       	push	r1
 5f2:	0f 92       	push	r0
 5f4:	0f b6       	in	r0, 0x3f	; 63
 5f6:	0f 92       	push	r0
 5f8:	11 24       	eor	r1, r1
 5fa:	8f 93       	push	r24
	PORTB = 0b00000100;
 5fc:	84 e0       	ldi	r24, 0x04	; 4
 5fe:	88 bb       	out	0x18, r24	; 24
}
 600:	8f 91       	pop	r24
 602:	0f 90       	pop	r0
 604:	0f be       	out	0x3f, r0	; 63
 606:	0f 90       	pop	r0
 608:	1f 90       	pop	r1
 60a:	18 95       	reti

0000060c <adcInit>:

void adcInit()
{
	ADMUX  = 0b11100001;
 60c:	81 ee       	ldi	r24, 0xE1	; 225
 60e:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b11000110;
 610:	86 ec       	ldi	r24, 0xC6	; 198
 612:	86 b9       	out	0x06, r24	; 6
 614:	08 95       	ret

00000616 <main>:
}

int main( void )
{	
	DDRF = 0x00;
 616:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRB = 0xFF;
 61a:	8f ef       	ldi	r24, 0xFF	; 255
 61c:	87 bb       	out	0x17, r24	; 23
	DDRD = 0xFF;
 61e:	81 bb       	out	0x11, r24	; 17
	DDRE = 0x00;
 620:	12 b8       	out	0x02, r1	; 2
	
    EICRB |= 0b00000010;  
 622:	8a b7       	in	r24, 0x3a	; 58
 624:	82 60       	ori	r24, 0x02	; 2
 626:	8a bf       	out	0x3a, r24	; 58
	//EICRA |= 0b00000010;        
    EIMSK |= 0b00010001;           
 628:	89 b7       	in	r24, 0x39	; 57
 62a:	81 61       	ori	r24, 0x11	; 17
 62c:	89 bf       	out	0x39, r24	; 57

	sei();
 62e:	78 94       	sei
	
	adcInit();
 630:	ed df       	rcall	.-38     	; 0x60c <adcInit>
	dotmatrixInit();
 632:	5e dd       	rcall	.-1348   	; 0xf0 <dotmatrixInit>
	clearDisplay();
 634:	bd dd       	rcall	.-1158   	; 0x1b0 <clearDisplay>
 636:	85 b1       	in	r24, 0x05	; 5
	
	char *word = "WARMTE";
	char *tempWord;
	
	int temp = ADCH;
 638:	95 b1       	in	r25, 0x05	; 5
	int lastTemp = temp;
	PORTB = ADCH;
 63a:	98 bb       	out	0x18, r25	; 24
 63c:	90 e0       	ldi	r25, 0x00	; 0
	
	if(temp > 12)
 63e:	0d 97       	sbiw	r24, 0x0d	; 13
 640:	3c f0       	brlt	.+14     	; 0x650 <main+0x3a>
 642:	8e e3       	ldi	r24, 0x3E	; 62
	{
		tempWord = word;
		char *str = ">";
		strcat(tempWord, str);
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <letters+0x247>
 64a:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <letters+0x246>
 64e:	06 c0       	rjmp	.+12     	; 0x65c <main+0x46>
 650:	8c e3       	ldi	r24, 0x3C	; 60
	}
	else 
	{
		tempWord = word;
		char *str = "<";
		strcat(tempWord, str);
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <letters+0x247>
 658:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <letters+0x246>
	}
	selectLetters(tempWord);
 65c:	82 e4       	ldi	r24, 0x42	; 66
 65e:	93 e0       	ldi	r25, 0x03	; 3
	
	while (1)
	{
	    scrollLeft();		
		
		wait(getScrollingSpeed()*100);
 660:	e0 dd       	rcall	.-1088   	; 0x222 <selectLetters>
	}
	selectLetters(tempWord);
	
	while (1)
	{
	    scrollLeft();		
 662:	c4 e6       	ldi	r28, 0x64	; 100
 664:	7f de       	rcall	.-770    	; 0x364 <scrollLeft>
		
		wait(getScrollingSpeed()*100);
 666:	04 df       	rcall	.-504    	; 0x470 <getScrollingSpeed>
 668:	9c 01       	movw	r18, r24
 66a:	c2 9f       	mul	r28, r18
 66c:	c0 01       	movw	r24, r0
 66e:	c3 9f       	mul	r28, r19
 670:	90 0d       	add	r25, r0
 672:	11 24       	eor	r1, r1
 674:	45 df       	rcall	.-374    	; 0x500 <wait>
 676:	f6 cf       	rjmp	.-20     	; 0x664 <main+0x4e>

00000678 <_exit>:
 678:	f8 94       	cli

0000067a <__stop_program>:
 67a:	ff cf       	rjmp	.-2      	; 0x67a <__stop_program>
